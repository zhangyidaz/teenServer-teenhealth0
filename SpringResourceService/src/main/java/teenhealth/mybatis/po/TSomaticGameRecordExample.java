package teenhealth.mybatis.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TSomaticGameRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public TSomaticGameRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("student_id is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("student_id is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(String value) {
            addCriterion("student_id =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(String value) {
            addCriterion("student_id <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(String value) {
            addCriterion("student_id >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(String value) {
            addCriterion("student_id >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(String value) {
            addCriterion("student_id <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(String value) {
            addCriterion("student_id <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLike(String value) {
            addCriterion("student_id like", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotLike(String value) {
            addCriterion("student_id not like", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<String> values) {
            addCriterion("student_id in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<String> values) {
            addCriterion("student_id not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(String value1, String value2) {
            addCriterion("student_id between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(String value1, String value2) {
            addCriterion("student_id not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andPlanIdIsNull() {
            addCriterion("plan_id is null");
            return (Criteria) this;
        }

        public Criteria andPlanIdIsNotNull() {
            addCriterion("plan_id is not null");
            return (Criteria) this;
        }

        public Criteria andPlanIdEqualTo(String value) {
            addCriterion("plan_id =", value, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdNotEqualTo(String value) {
            addCriterion("plan_id <>", value, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdGreaterThan(String value) {
            addCriterion("plan_id >", value, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdGreaterThanOrEqualTo(String value) {
            addCriterion("plan_id >=", value, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdLessThan(String value) {
            addCriterion("plan_id <", value, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdLessThanOrEqualTo(String value) {
            addCriterion("plan_id <=", value, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdLike(String value) {
            addCriterion("plan_id like", value, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdNotLike(String value) {
            addCriterion("plan_id not like", value, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdIn(List<String> values) {
            addCriterion("plan_id in", values, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdNotIn(List<String> values) {
            addCriterion("plan_id not in", values, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdBetween(String value1, String value2) {
            addCriterion("plan_id between", value1, value2, "planId");
            return (Criteria) this;
        }

        public Criteria andPlanIdNotBetween(String value1, String value2) {
            addCriterion("plan_id not between", value1, value2, "planId");
            return (Criteria) this;
        }

        public Criteria andTrainModeIsNull() {
            addCriterion("train_mode is null");
            return (Criteria) this;
        }

        public Criteria andTrainModeIsNotNull() {
            addCriterion("train_mode is not null");
            return (Criteria) this;
        }

        public Criteria andTrainModeEqualTo(Integer value) {
            addCriterion("train_mode =", value, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeNotEqualTo(Integer value) {
            addCriterion("train_mode <>", value, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeGreaterThan(Integer value) {
            addCriterion("train_mode >", value, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeGreaterThanOrEqualTo(Integer value) {
            addCriterion("train_mode >=", value, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeLessThan(Integer value) {
            addCriterion("train_mode <", value, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeLessThanOrEqualTo(Integer value) {
            addCriterion("train_mode <=", value, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeIn(List<Integer> values) {
            addCriterion("train_mode in", values, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeNotIn(List<Integer> values) {
            addCriterion("train_mode not in", values, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeBetween(Integer value1, Integer value2) {
            addCriterion("train_mode between", value1, value2, "trainMode");
            return (Criteria) this;
        }

        public Criteria andTrainModeNotBetween(Integer value1, Integer value2) {
            addCriterion("train_mode not between", value1, value2, "trainMode");
            return (Criteria) this;
        }

        public Criteria andModeEscapeIsNull() {
            addCriterion("mode_escape is null");
            return (Criteria) this;
        }

        public Criteria andModeEscapeIsNotNull() {
            addCriterion("mode_escape is not null");
            return (Criteria) this;
        }

        public Criteria andModeEscapeEqualTo(Integer value) {
            addCriterion("mode_escape =", value, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeNotEqualTo(Integer value) {
            addCriterion("mode_escape <>", value, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeGreaterThan(Integer value) {
            addCriterion("mode_escape >", value, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeGreaterThanOrEqualTo(Integer value) {
            addCriterion("mode_escape >=", value, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeLessThan(Integer value) {
            addCriterion("mode_escape <", value, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeLessThanOrEqualTo(Integer value) {
            addCriterion("mode_escape <=", value, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeIn(List<Integer> values) {
            addCriterion("mode_escape in", values, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeNotIn(List<Integer> values) {
            addCriterion("mode_escape not in", values, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeBetween(Integer value1, Integer value2) {
            addCriterion("mode_escape between", value1, value2, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andModeEscapeNotBetween(Integer value1, Integer value2) {
            addCriterion("mode_escape not between", value1, value2, "modeEscape");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeIsNull() {
            addCriterion("escape_time is null");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeIsNotNull() {
            addCriterion("escape_time is not null");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeEqualTo(Integer value) {
            addCriterion("escape_time =", value, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeNotEqualTo(Integer value) {
            addCriterion("escape_time <>", value, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeGreaterThan(Integer value) {
            addCriterion("escape_time >", value, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("escape_time >=", value, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeLessThan(Integer value) {
            addCriterion("escape_time <", value, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeLessThanOrEqualTo(Integer value) {
            addCriterion("escape_time <=", value, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeIn(List<Integer> values) {
            addCriterion("escape_time in", values, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeNotIn(List<Integer> values) {
            addCriterion("escape_time not in", values, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeBetween(Integer value1, Integer value2) {
            addCriterion("escape_time between", value1, value2, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andEscapeTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("escape_time not between", value1, value2, "escapeTime");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainIsNull() {
            addCriterion("level_escape_train is null");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainIsNotNull() {
            addCriterion("level_escape_train is not null");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainEqualTo(Integer value) {
            addCriterion("level_escape_train =", value, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainNotEqualTo(Integer value) {
            addCriterion("level_escape_train <>", value, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainGreaterThan(Integer value) {
            addCriterion("level_escape_train >", value, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainGreaterThanOrEqualTo(Integer value) {
            addCriterion("level_escape_train >=", value, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainLessThan(Integer value) {
            addCriterion("level_escape_train <", value, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainLessThanOrEqualTo(Integer value) {
            addCriterion("level_escape_train <=", value, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainIn(List<Integer> values) {
            addCriterion("level_escape_train in", values, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainNotIn(List<Integer> values) {
            addCriterion("level_escape_train not in", values, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainBetween(Integer value1, Integer value2) {
            addCriterion("level_escape_train between", value1, value2, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andLevelEscapeTrainNotBetween(Integer value1, Integer value2) {
            addCriterion("level_escape_train not between", value1, value2, "levelEscapeTrain");
            return (Criteria) this;
        }

        public Criteria andNumElegUpIsNull() {
            addCriterion("num_eleg_up is null");
            return (Criteria) this;
        }

        public Criteria andNumElegUpIsNotNull() {
            addCriterion("num_eleg_up is not null");
            return (Criteria) this;
        }

        public Criteria andNumElegUpEqualTo(Integer value) {
            addCriterion("num_eleg_up =", value, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpNotEqualTo(Integer value) {
            addCriterion("num_eleg_up <>", value, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpGreaterThan(Integer value) {
            addCriterion("num_eleg_up >", value, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_eleg_up >=", value, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpLessThan(Integer value) {
            addCriterion("num_eleg_up <", value, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpLessThanOrEqualTo(Integer value) {
            addCriterion("num_eleg_up <=", value, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpIn(List<Integer> values) {
            addCriterion("num_eleg_up in", values, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpNotIn(List<Integer> values) {
            addCriterion("num_eleg_up not in", values, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpBetween(Integer value1, Integer value2) {
            addCriterion("num_eleg_up between", value1, value2, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumElegUpNotBetween(Integer value1, Integer value2) {
            addCriterion("num_eleg_up not between", value1, value2, "numElegUp");
            return (Criteria) this;
        }

        public Criteria andNumSquatIsNull() {
            addCriterion("num_squat is null");
            return (Criteria) this;
        }

        public Criteria andNumSquatIsNotNull() {
            addCriterion("num_squat is not null");
            return (Criteria) this;
        }

        public Criteria andNumSquatEqualTo(Integer value) {
            addCriterion("num_squat =", value, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatNotEqualTo(Integer value) {
            addCriterion("num_squat <>", value, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatGreaterThan(Integer value) {
            addCriterion("num_squat >", value, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_squat >=", value, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatLessThan(Integer value) {
            addCriterion("num_squat <", value, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatLessThanOrEqualTo(Integer value) {
            addCriterion("num_squat <=", value, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatIn(List<Integer> values) {
            addCriterion("num_squat in", values, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatNotIn(List<Integer> values) {
            addCriterion("num_squat not in", values, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatBetween(Integer value1, Integer value2) {
            addCriterion("num_squat between", value1, value2, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumSquatNotBetween(Integer value1, Integer value2) {
            addCriterion("num_squat not between", value1, value2, "numSquat");
            return (Criteria) this;
        }

        public Criteria andNumJumpIsNull() {
            addCriterion("num_jump is null");
            return (Criteria) this;
        }

        public Criteria andNumJumpIsNotNull() {
            addCriterion("num_jump is not null");
            return (Criteria) this;
        }

        public Criteria andNumJumpEqualTo(Integer value) {
            addCriterion("num_jump =", value, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpNotEqualTo(Integer value) {
            addCriterion("num_jump <>", value, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpGreaterThan(Integer value) {
            addCriterion("num_jump >", value, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_jump >=", value, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpLessThan(Integer value) {
            addCriterion("num_jump <", value, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpLessThanOrEqualTo(Integer value) {
            addCriterion("num_jump <=", value, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpIn(List<Integer> values) {
            addCriterion("num_jump in", values, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpNotIn(List<Integer> values) {
            addCriterion("num_jump not in", values, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpBetween(Integer value1, Integer value2) {
            addCriterion("num_jump between", value1, value2, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumJumpNotBetween(Integer value1, Integer value2) {
            addCriterion("num_jump not between", value1, value2, "numJump");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftIsNull() {
            addCriterion("num_not_leg_lift is null");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftIsNotNull() {
            addCriterion("num_not_leg_lift is not null");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftEqualTo(Integer value) {
            addCriterion("num_not_leg_lift =", value, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftNotEqualTo(Integer value) {
            addCriterion("num_not_leg_lift <>", value, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftGreaterThan(Integer value) {
            addCriterion("num_not_leg_lift >", value, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_not_leg_lift >=", value, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftLessThan(Integer value) {
            addCriterion("num_not_leg_lift <", value, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftLessThanOrEqualTo(Integer value) {
            addCriterion("num_not_leg_lift <=", value, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftIn(List<Integer> values) {
            addCriterion("num_not_leg_lift in", values, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftNotIn(List<Integer> values) {
            addCriterion("num_not_leg_lift not in", values, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftBetween(Integer value1, Integer value2) {
            addCriterion("num_not_leg_lift between", value1, value2, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotLegLiftNotBetween(Integer value1, Integer value2) {
            addCriterion("num_not_leg_lift not between", value1, value2, "numNotLegLift");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatIsNull() {
            addCriterion("num_not_squat is null");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatIsNotNull() {
            addCriterion("num_not_squat is not null");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatEqualTo(Integer value) {
            addCriterion("num_not_squat =", value, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatNotEqualTo(Integer value) {
            addCriterion("num_not_squat <>", value, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatGreaterThan(Integer value) {
            addCriterion("num_not_squat >", value, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_not_squat >=", value, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatLessThan(Integer value) {
            addCriterion("num_not_squat <", value, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatLessThanOrEqualTo(Integer value) {
            addCriterion("num_not_squat <=", value, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatIn(List<Integer> values) {
            addCriterion("num_not_squat in", values, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatNotIn(List<Integer> values) {
            addCriterion("num_not_squat not in", values, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatBetween(Integer value1, Integer value2) {
            addCriterion("num_not_squat between", value1, value2, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotSquatNotBetween(Integer value1, Integer value2) {
            addCriterion("num_not_squat not between", value1, value2, "numNotSquat");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpIsNull() {
            addCriterion("num_not_jump is null");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpIsNotNull() {
            addCriterion("num_not_jump is not null");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpEqualTo(Integer value) {
            addCriterion("num_not_jump =", value, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpNotEqualTo(Integer value) {
            addCriterion("num_not_jump <>", value, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpGreaterThan(Integer value) {
            addCriterion("num_not_jump >", value, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_not_jump >=", value, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpLessThan(Integer value) {
            addCriterion("num_not_jump <", value, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpLessThanOrEqualTo(Integer value) {
            addCriterion("num_not_jump <=", value, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpIn(List<Integer> values) {
            addCriterion("num_not_jump in", values, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpNotIn(List<Integer> values) {
            addCriterion("num_not_jump not in", values, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpBetween(Integer value1, Integer value2) {
            addCriterion("num_not_jump between", value1, value2, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumNotJumpNotBetween(Integer value1, Integer value2) {
            addCriterion("num_not_jump not between", value1, value2, "numNotJump");
            return (Criteria) this;
        }

        public Criteria andNumDiamondIsNull() {
            addCriterion("num_diamond is null");
            return (Criteria) this;
        }

        public Criteria andNumDiamondIsNotNull() {
            addCriterion("num_diamond is not null");
            return (Criteria) this;
        }

        public Criteria andNumDiamondEqualTo(Integer value) {
            addCriterion("num_diamond =", value, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondNotEqualTo(Integer value) {
            addCriterion("num_diamond <>", value, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondGreaterThan(Integer value) {
            addCriterion("num_diamond >", value, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_diamond >=", value, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondLessThan(Integer value) {
            addCriterion("num_diamond <", value, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondLessThanOrEqualTo(Integer value) {
            addCriterion("num_diamond <=", value, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondIn(List<Integer> values) {
            addCriterion("num_diamond in", values, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondNotIn(List<Integer> values) {
            addCriterion("num_diamond not in", values, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondBetween(Integer value1, Integer value2) {
            addCriterion("num_diamond between", value1, value2, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andNumDiamondNotBetween(Integer value1, Integer value2) {
            addCriterion("num_diamond not between", value1, value2, "numDiamond");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeIsNull() {
            addCriterion("score_esecape is null");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeIsNotNull() {
            addCriterion("score_esecape is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeEqualTo(Integer value) {
            addCriterion("score_esecape =", value, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeNotEqualTo(Integer value) {
            addCriterion("score_esecape <>", value, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeGreaterThan(Integer value) {
            addCriterion("score_esecape >", value, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeGreaterThanOrEqualTo(Integer value) {
            addCriterion("score_esecape >=", value, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeLessThan(Integer value) {
            addCriterion("score_esecape <", value, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeLessThanOrEqualTo(Integer value) {
            addCriterion("score_esecape <=", value, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeIn(List<Integer> values) {
            addCriterion("score_esecape in", values, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeNotIn(List<Integer> values) {
            addCriterion("score_esecape not in", values, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeBetween(Integer value1, Integer value2) {
            addCriterion("score_esecape between", value1, value2, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andScoreEsecapeNotBetween(Integer value1, Integer value2) {
            addCriterion("score_esecape not between", value1, value2, "scoreEsecape");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIsNull() {
            addCriterion("upload_time is null");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIsNotNull() {
            addCriterion("upload_time is not null");
            return (Criteria) this;
        }

        public Criteria andUploadTimeEqualTo(Date value) {
            addCriterion("upload_time =", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotEqualTo(Date value) {
            addCriterion("upload_time <>", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeGreaterThan(Date value) {
            addCriterion("upload_time >", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("upload_time >=", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeLessThan(Date value) {
            addCriterion("upload_time <", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeLessThanOrEqualTo(Date value) {
            addCriterion("upload_time <=", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIn(List<Date> values) {
            addCriterion("upload_time in", values, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotIn(List<Date> values) {
            addCriterion("upload_time not in", values, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeBetween(Date value1, Date value2) {
            addCriterion("upload_time between", value1, value2, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotBetween(Date value1, Date value2) {
            addCriterion("upload_time not between", value1, value2, "uploadTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated do_not_delete_during_merge Mon Mar 23 10:53:04 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_somatic_game_record
     *
     * @mbggenerated Mon Mar 23 10:53:04 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}