package springboot.mybatis.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TEyesightPlanExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public TEyesightPlanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("student_id is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("student_id is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(String value) {
            addCriterion("student_id =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(String value) {
            addCriterion("student_id <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(String value) {
            addCriterion("student_id >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(String value) {
            addCriterion("student_id >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(String value) {
            addCriterion("student_id <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(String value) {
            addCriterion("student_id <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLike(String value) {
            addCriterion("student_id like", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotLike(String value) {
            addCriterion("student_id not like", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<String> values) {
            addCriterion("student_id in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<String> values) {
            addCriterion("student_id not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(String value1, String value2) {
            addCriterion("student_id between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(String value1, String value2) {
            addCriterion("student_id not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andExemodeIsNull() {
            addCriterion("exemode is null");
            return (Criteria) this;
        }

        public Criteria andExemodeIsNotNull() {
            addCriterion("exemode is not null");
            return (Criteria) this;
        }

        public Criteria andExemodeEqualTo(Integer value) {
            addCriterion("exemode =", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeNotEqualTo(Integer value) {
            addCriterion("exemode <>", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeGreaterThan(Integer value) {
            addCriterion("exemode >", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("exemode >=", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeLessThan(Integer value) {
            addCriterion("exemode <", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeLessThanOrEqualTo(Integer value) {
            addCriterion("exemode <=", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeIn(List<Integer> values) {
            addCriterion("exemode in", values, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeNotIn(List<Integer> values) {
            addCriterion("exemode not in", values, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeBetween(Integer value1, Integer value2) {
            addCriterion("exemode between", value1, value2, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeNotBetween(Integer value1, Integer value2) {
            addCriterion("exemode not between", value1, value2, "exemode");
            return (Criteria) this;
        }

        public Criteria andExelengthIsNull() {
            addCriterion("exelength is null");
            return (Criteria) this;
        }

        public Criteria andExelengthIsNotNull() {
            addCriterion("exelength is not null");
            return (Criteria) this;
        }

        public Criteria andExelengthEqualTo(Integer value) {
            addCriterion("exelength =", value, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthNotEqualTo(Integer value) {
            addCriterion("exelength <>", value, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthGreaterThan(Integer value) {
            addCriterion("exelength >", value, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthGreaterThanOrEqualTo(Integer value) {
            addCriterion("exelength >=", value, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthLessThan(Integer value) {
            addCriterion("exelength <", value, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthLessThanOrEqualTo(Integer value) {
            addCriterion("exelength <=", value, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthIn(List<Integer> values) {
            addCriterion("exelength in", values, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthNotIn(List<Integer> values) {
            addCriterion("exelength not in", values, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthBetween(Integer value1, Integer value2) {
            addCriterion("exelength between", value1, value2, "exelength");
            return (Criteria) this;
        }

        public Criteria andExelengthNotBetween(Integer value1, Integer value2) {
            addCriterion("exelength not between", value1, value2, "exelength");
            return (Criteria) this;
        }

        public Criteria andExefreqIsNull() {
            addCriterion("exefreq is null");
            return (Criteria) this;
        }

        public Criteria andExefreqIsNotNull() {
            addCriterion("exefreq is not null");
            return (Criteria) this;
        }

        public Criteria andExefreqEqualTo(Integer value) {
            addCriterion("exefreq =", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqNotEqualTo(Integer value) {
            addCriterion("exefreq <>", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqGreaterThan(Integer value) {
            addCriterion("exefreq >", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqGreaterThanOrEqualTo(Integer value) {
            addCriterion("exefreq >=", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqLessThan(Integer value) {
            addCriterion("exefreq <", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqLessThanOrEqualTo(Integer value) {
            addCriterion("exefreq <=", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqIn(List<Integer> values) {
            addCriterion("exefreq in", values, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqNotIn(List<Integer> values) {
            addCriterion("exefreq not in", values, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqBetween(Integer value1, Integer value2) {
            addCriterion("exefreq between", value1, value2, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqNotBetween(Integer value1, Integer value2) {
            addCriterion("exefreq not between", value1, value2, "exefreq");
            return (Criteria) this;
        }

        public Criteria andIsEnableIsNull() {
            addCriterion("is_enable is null");
            return (Criteria) this;
        }

        public Criteria andIsEnableIsNotNull() {
            addCriterion("is_enable is not null");
            return (Criteria) this;
        }

        public Criteria andIsEnableEqualTo(Integer value) {
            addCriterion("is_enable =", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableNotEqualTo(Integer value) {
            addCriterion("is_enable <>", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableGreaterThan(Integer value) {
            addCriterion("is_enable >", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_enable >=", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableLessThan(Integer value) {
            addCriterion("is_enable <", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableLessThanOrEqualTo(Integer value) {
            addCriterion("is_enable <=", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableIn(List<Integer> values) {
            addCriterion("is_enable in", values, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableNotIn(List<Integer> values) {
            addCriterion("is_enable not in", values, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableBetween(Integer value1, Integer value2) {
            addCriterion("is_enable between", value1, value2, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableNotBetween(Integer value1, Integer value2) {
            addCriterion("is_enable not between", value1, value2, "isEnable");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated do_not_delete_during_merge Sat Mar 07 21:35:32 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_eyesight_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}