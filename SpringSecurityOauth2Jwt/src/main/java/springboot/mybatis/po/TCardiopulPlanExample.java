package springboot.mybatis.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TCardiopulPlanExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public TCardiopulPlanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("student_id is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("student_id is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(String value) {
            addCriterion("student_id =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(String value) {
            addCriterion("student_id <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(String value) {
            addCriterion("student_id >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(String value) {
            addCriterion("student_id >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(String value) {
            addCriterion("student_id <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(String value) {
            addCriterion("student_id <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLike(String value) {
            addCriterion("student_id like", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotLike(String value) {
            addCriterion("student_id not like", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<String> values) {
            addCriterion("student_id in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<String> values) {
            addCriterion("student_id not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(String value1, String value2) {
            addCriterion("student_id between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(String value1, String value2) {
            addCriterion("student_id not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andExemodeIsNull() {
            addCriterion("exemode is null");
            return (Criteria) this;
        }

        public Criteria andExemodeIsNotNull() {
            addCriterion("exemode is not null");
            return (Criteria) this;
        }

        public Criteria andExemodeEqualTo(Integer value) {
            addCriterion("exemode =", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeNotEqualTo(Integer value) {
            addCriterion("exemode <>", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeGreaterThan(Integer value) {
            addCriterion("exemode >", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("exemode >=", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeLessThan(Integer value) {
            addCriterion("exemode <", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeLessThanOrEqualTo(Integer value) {
            addCriterion("exemode <=", value, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeIn(List<Integer> values) {
            addCriterion("exemode in", values, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeNotIn(List<Integer> values) {
            addCriterion("exemode not in", values, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeBetween(Integer value1, Integer value2) {
            addCriterion("exemode between", value1, value2, "exemode");
            return (Criteria) this;
        }

        public Criteria andExemodeNotBetween(Integer value1, Integer value2) {
            addCriterion("exemode not between", value1, value2, "exemode");
            return (Criteria) this;
        }

        public Criteria andExeunitIsNull() {
            addCriterion("exeunit is null");
            return (Criteria) this;
        }

        public Criteria andExeunitIsNotNull() {
            addCriterion("exeunit is not null");
            return (Criteria) this;
        }

        public Criteria andExeunitEqualTo(Integer value) {
            addCriterion("exeunit =", value, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitNotEqualTo(Integer value) {
            addCriterion("exeunit <>", value, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitGreaterThan(Integer value) {
            addCriterion("exeunit >", value, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitGreaterThanOrEqualTo(Integer value) {
            addCriterion("exeunit >=", value, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitLessThan(Integer value) {
            addCriterion("exeunit <", value, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitLessThanOrEqualTo(Integer value) {
            addCriterion("exeunit <=", value, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitIn(List<Integer> values) {
            addCriterion("exeunit in", values, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitNotIn(List<Integer> values) {
            addCriterion("exeunit not in", values, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitBetween(Integer value1, Integer value2) {
            addCriterion("exeunit between", value1, value2, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExeunitNotBetween(Integer value1, Integer value2) {
            addCriterion("exeunit not between", value1, value2, "exeunit");
            return (Criteria) this;
        }

        public Criteria andExedueIsNull() {
            addCriterion("exedue is null");
            return (Criteria) this;
        }

        public Criteria andExedueIsNotNull() {
            addCriterion("exedue is not null");
            return (Criteria) this;
        }

        public Criteria andExedueEqualTo(Integer value) {
            addCriterion("exedue =", value, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueNotEqualTo(Integer value) {
            addCriterion("exedue <>", value, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueGreaterThan(Integer value) {
            addCriterion("exedue >", value, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueGreaterThanOrEqualTo(Integer value) {
            addCriterion("exedue >=", value, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueLessThan(Integer value) {
            addCriterion("exedue <", value, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueLessThanOrEqualTo(Integer value) {
            addCriterion("exedue <=", value, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueIn(List<Integer> values) {
            addCriterion("exedue in", values, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueNotIn(List<Integer> values) {
            addCriterion("exedue not in", values, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueBetween(Integer value1, Integer value2) {
            addCriterion("exedue between", value1, value2, "exedue");
            return (Criteria) this;
        }

        public Criteria andExedueNotBetween(Integer value1, Integer value2) {
            addCriterion("exedue not between", value1, value2, "exedue");
            return (Criteria) this;
        }

        public Criteria andExefreqIsNull() {
            addCriterion("exefreq is null");
            return (Criteria) this;
        }

        public Criteria andExefreqIsNotNull() {
            addCriterion("exefreq is not null");
            return (Criteria) this;
        }

        public Criteria andExefreqEqualTo(Integer value) {
            addCriterion("exefreq =", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqNotEqualTo(Integer value) {
            addCriterion("exefreq <>", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqGreaterThan(Integer value) {
            addCriterion("exefreq >", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqGreaterThanOrEqualTo(Integer value) {
            addCriterion("exefreq >=", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqLessThan(Integer value) {
            addCriterion("exefreq <", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqLessThanOrEqualTo(Integer value) {
            addCriterion("exefreq <=", value, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqIn(List<Integer> values) {
            addCriterion("exefreq in", values, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqNotIn(List<Integer> values) {
            addCriterion("exefreq not in", values, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqBetween(Integer value1, Integer value2) {
            addCriterion("exefreq between", value1, value2, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExefreqNotBetween(Integer value1, Integer value2) {
            addCriterion("exefreq not between", value1, value2, "exefreq");
            return (Criteria) this;
        }

        public Criteria andExecycleIsNull() {
            addCriterion("execycle is null");
            return (Criteria) this;
        }

        public Criteria andExecycleIsNotNull() {
            addCriterion("execycle is not null");
            return (Criteria) this;
        }

        public Criteria andExecycleEqualTo(Integer value) {
            addCriterion("execycle =", value, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleNotEqualTo(Integer value) {
            addCriterion("execycle <>", value, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleGreaterThan(Integer value) {
            addCriterion("execycle >", value, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleGreaterThanOrEqualTo(Integer value) {
            addCriterion("execycle >=", value, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleLessThan(Integer value) {
            addCriterion("execycle <", value, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleLessThanOrEqualTo(Integer value) {
            addCriterion("execycle <=", value, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleIn(List<Integer> values) {
            addCriterion("execycle in", values, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleNotIn(List<Integer> values) {
            addCriterion("execycle not in", values, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleBetween(Integer value1, Integer value2) {
            addCriterion("execycle between", value1, value2, "execycle");
            return (Criteria) this;
        }

        public Criteria andExecycleNotBetween(Integer value1, Integer value2) {
            addCriterion("execycle not between", value1, value2, "execycle");
            return (Criteria) this;
        }

        public Criteria andMaxHrIsNull() {
            addCriterion("max_hr is null");
            return (Criteria) this;
        }

        public Criteria andMaxHrIsNotNull() {
            addCriterion("max_hr is not null");
            return (Criteria) this;
        }

        public Criteria andMaxHrEqualTo(Integer value) {
            addCriterion("max_hr =", value, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrNotEqualTo(Integer value) {
            addCriterion("max_hr <>", value, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrGreaterThan(Integer value) {
            addCriterion("max_hr >", value, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_hr >=", value, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrLessThan(Integer value) {
            addCriterion("max_hr <", value, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrLessThanOrEqualTo(Integer value) {
            addCriterion("max_hr <=", value, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrIn(List<Integer> values) {
            addCriterion("max_hr in", values, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrNotIn(List<Integer> values) {
            addCriterion("max_hr not in", values, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrBetween(Integer value1, Integer value2) {
            addCriterion("max_hr between", value1, value2, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxHrNotBetween(Integer value1, Integer value2) {
            addCriterion("max_hr not between", value1, value2, "maxHr");
            return (Criteria) this;
        }

        public Criteria andMaxPoweIsNull() {
            addCriterion("max_powe is null");
            return (Criteria) this;
        }

        public Criteria andMaxPoweIsNotNull() {
            addCriterion("max_powe is not null");
            return (Criteria) this;
        }

        public Criteria andMaxPoweEqualTo(Integer value) {
            addCriterion("max_powe =", value, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweNotEqualTo(Integer value) {
            addCriterion("max_powe <>", value, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweGreaterThan(Integer value) {
            addCriterion("max_powe >", value, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_powe >=", value, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweLessThan(Integer value) {
            addCriterion("max_powe <", value, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweLessThanOrEqualTo(Integer value) {
            addCriterion("max_powe <=", value, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweIn(List<Integer> values) {
            addCriterion("max_powe in", values, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweNotIn(List<Integer> values) {
            addCriterion("max_powe not in", values, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweBetween(Integer value1, Integer value2) {
            addCriterion("max_powe between", value1, value2, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andMaxPoweNotBetween(Integer value1, Integer value2) {
            addCriterion("max_powe not between", value1, value2, "maxPowe");
            return (Criteria) this;
        }

        public Criteria andIntHrKIsNull() {
            addCriterion("int_hr_k is null");
            return (Criteria) this;
        }

        public Criteria andIntHrKIsNotNull() {
            addCriterion("int_hr_k is not null");
            return (Criteria) this;
        }

        public Criteria andIntHrKEqualTo(Double value) {
            addCriterion("int_hr_k =", value, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKNotEqualTo(Double value) {
            addCriterion("int_hr_k <>", value, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKGreaterThan(Double value) {
            addCriterion("int_hr_k >", value, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKGreaterThanOrEqualTo(Double value) {
            addCriterion("int_hr_k >=", value, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKLessThan(Double value) {
            addCriterion("int_hr_k <", value, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKLessThanOrEqualTo(Double value) {
            addCriterion("int_hr_k <=", value, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKIn(List<Double> values) {
            addCriterion("int_hr_k in", values, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKNotIn(List<Double> values) {
            addCriterion("int_hr_k not in", values, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKBetween(Double value1, Double value2) {
            addCriterion("int_hr_k between", value1, value2, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrKNotBetween(Double value1, Double value2) {
            addCriterion("int_hr_k not between", value1, value2, "intHrK");
            return (Criteria) this;
        }

        public Criteria andIntHrBIsNull() {
            addCriterion("int_hr_b is null");
            return (Criteria) this;
        }

        public Criteria andIntHrBIsNotNull() {
            addCriterion("int_hr_b is not null");
            return (Criteria) this;
        }

        public Criteria andIntHrBEqualTo(Double value) {
            addCriterion("int_hr_b =", value, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBNotEqualTo(Double value) {
            addCriterion("int_hr_b <>", value, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBGreaterThan(Double value) {
            addCriterion("int_hr_b >", value, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBGreaterThanOrEqualTo(Double value) {
            addCriterion("int_hr_b >=", value, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBLessThan(Double value) {
            addCriterion("int_hr_b <", value, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBLessThanOrEqualTo(Double value) {
            addCriterion("int_hr_b <=", value, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBIn(List<Double> values) {
            addCriterion("int_hr_b in", values, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBNotIn(List<Double> values) {
            addCriterion("int_hr_b not in", values, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBBetween(Double value1, Double value2) {
            addCriterion("int_hr_b between", value1, value2, "intHrB");
            return (Criteria) this;
        }

        public Criteria andIntHrBNotBetween(Double value1, Double value2) {
            addCriterion("int_hr_b not between", value1, value2, "intHrB");
            return (Criteria) this;
        }

        public Criteria andUserHrIsNull() {
            addCriterion("user_hr is null");
            return (Criteria) this;
        }

        public Criteria andUserHrIsNotNull() {
            addCriterion("user_hr is not null");
            return (Criteria) this;
        }

        public Criteria andUserHrEqualTo(Integer value) {
            addCriterion("user_hr =", value, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrNotEqualTo(Integer value) {
            addCriterion("user_hr <>", value, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrGreaterThan(Integer value) {
            addCriterion("user_hr >", value, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_hr >=", value, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrLessThan(Integer value) {
            addCriterion("user_hr <", value, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrLessThanOrEqualTo(Integer value) {
            addCriterion("user_hr <=", value, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrIn(List<Integer> values) {
            addCriterion("user_hr in", values, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrNotIn(List<Integer> values) {
            addCriterion("user_hr not in", values, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrBetween(Integer value1, Integer value2) {
            addCriterion("user_hr between", value1, value2, "userHr");
            return (Criteria) this;
        }

        public Criteria andUserHrNotBetween(Integer value1, Integer value2) {
            addCriterion("user_hr not between", value1, value2, "userHr");
            return (Criteria) this;
        }

        public Criteria andIsEnablesIsNull() {
            addCriterion("is_enables is null");
            return (Criteria) this;
        }

        public Criteria andIsEnablesIsNotNull() {
            addCriterion("is_enables is not null");
            return (Criteria) this;
        }

        public Criteria andIsEnablesEqualTo(Integer value) {
            addCriterion("is_enables =", value, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesNotEqualTo(Integer value) {
            addCriterion("is_enables <>", value, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesGreaterThan(Integer value) {
            addCriterion("is_enables >", value, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_enables >=", value, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesLessThan(Integer value) {
            addCriterion("is_enables <", value, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesLessThanOrEqualTo(Integer value) {
            addCriterion("is_enables <=", value, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesIn(List<Integer> values) {
            addCriterion("is_enables in", values, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesNotIn(List<Integer> values) {
            addCriterion("is_enables not in", values, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesBetween(Integer value1, Integer value2) {
            addCriterion("is_enables between", value1, value2, "isEnables");
            return (Criteria) this;
        }

        public Criteria andIsEnablesNotBetween(Integer value1, Integer value2) {
            addCriterion("is_enables not between", value1, value2, "isEnables");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated do_not_delete_during_merge Sat Mar 07 21:35:32 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_cardiopul_plan
     *
     * @mbggenerated Sat Mar 07 21:35:32 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}